version: '2.1'
services:
  # Frontend
  lb:
    extends:
      file: docker-services.yml
      service: lb
    links:
      - frontend
  frontend:
    extends:
      file: docker-services.yml
      service: frontend
    links:
      - web
    volumes_from:
      - static
  # Application
  web:
    extends:
      file: docker-services.yml
      service: app
    command: uwsgi /code/zenodo/docker/uwsgi/uwsgi.ini
    ports:
      - "5000:5000"
    links:
      - cache
      - es
      - mq
      - db
    volumes_from:
      - static
  worker:
    extends:
      file: docker-services.yml
      service: app
    restart: "always"
    command: "celery worker -A zenodo.celery --loglevel=INFO"
    links:
      - cache
      - es
      - mq
      - db
    volumes_from:
      - static
  beat:
    extends:
      file: docker-services.yml
      service: app
    restart: "always"
    command: "celery beat -A zenodo.celery --loglevel=INFO"
    links:
      - cache
      - es
      - mq
      - db
    volumes_from:
      - static
  static:
    extends:
      file: docker-services.yml
      service: app
    restart: "no"
    command: tail -f /var/log/*
    user: zenodo
    volumes:
      - "instance:/usr/local/var/instance"
      - "data:/usr/local/var/instance/data"
      # - "/usr/local/lib/python3.5/site-packages"
      - "python27_sitepkgs:/usr/local/lib/python2.7/site-packages"
      - "/usr/local/var/data"
      - ".:/code/zenodo"
  # Monitoring
  flower:
    extends:
      file: docker-services.yml
      service: flower
    links:
      - mq
  kibana:
    extends:
      file: docker-services.yml
      service: kibana
    links:
      - es
  # Base services
  cache:
    extends:
      file: docker-services.yml
      service: cache
  db:
    extends:
      file: docker-services.yml
      service: db
    volumes:
      - "db_data:/var/lib/postgresql/data"
  mq:
    extends:
      file: docker-services.yml
      service: mq
  es:
    extends:
      file: docker-services.yml
      service: es
    volumes:
      - "es_data:/usr/share/elasticsearch/data"
volumes:  
  instance:
  data:
  python27_sitepkgs:
  db_data:
  es_data:
